<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dictation.word.dao.word.WordMapper">
    <resultMap id="wordInfo" type="dictation.word.entity.word.WordInfo">
        <result column="id" property="id"/>
        <result column="word" property="word"/>
        <result column="us_symbol" property="usSymbol"/>
        <result column="en_symbol" property="enSymbol"/>
        <result column="en_symbol_mp3" property="enSymbolMp3"/>
        <result column="us_symbol_mp3" property="usSymbolMp3"/>
    </resultMap>

    <select id="getWordInfo" resultMap="wordInfo">
        SELECT word.*,
        lw.lib_id
        FROM word
        JOIN lib_word AS lw
        ON lw.word_id = word.id AND lw.lib_id = #{libId}
        <if test="word!=null and word!=''">
            and word.word like concat('%',#{word},'%')
        </if>
        <if test="random==true">
            order by rand()
        </if>
    </select>
    <select id="getAllWordInfo" resultMap="wordInfo">
        select * from word
        <if test="word!=null and word!=''">
            where word.word like concat('%',#{word},'%')
        </if>
        <if test="random==true">
            order by rand()
        </if>
    </select>
    <!--    优先选择本库，否则选择公共库释义-->
    <select id="getDefaultWordExplainByLib" resultType="dictation.word.entity.word.Explain">
        select t.*
        from (select *
              from word_explain
              where word_id = #{wordId}
                and is_default = 1) as t
                 join lib
                      on lib.id = t.lib_id and (lib.id = #{libId} or common = 1) limit 1
    </select>
    <select id="getOtherLibExplains" resultType="dictation.word.entity.word.tables.WordExplain">
        select t.*
        from (select *
              from word_explain
              where word_id = #{wordId}) as t
                 join lib
                      on lib.id = t.lib_id and lib.id = #{libId}


    </select>

</mapper>
